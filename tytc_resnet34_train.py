# -*- coding: utf-8 -*-
"""tytc_resnet34_train.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yNm4xUzk6ckVi4j81BVwHlBEO1QjTdem

# This is a source code that use to train "Is that a Supra?!" model

This code base on AI Builders code on how to train an image classification model with FastAI.


*  Code: https://github.com/ai-builders/curriculum/blob/main/notebooks/04v_classification.ipynb
*   Video: https://youtu.be/ZRLT4G48EZQ
"""

!pip install -Uqq fastbook
import fastbook
fastbook.setup_book()

from fastbook import *

fields = DataBlock(
    blocks=(ImageBlock, CategoryBlock),
    get_items=get_image_files,
    get_y=parent_label,
    splitter=RandomSplitter(valid_pct=0.2, seed=42), # split data
    item_tfms=RandomResizedCrop(224, min_scale=0.5), # images resize
    batch_tfms=aug_transforms()
)

paths = get_image_files('WORK FOLDER') # work folder that contain data

dls = fields.dataloaders("WORK FOLDER") # dataloader

dls.train.show_batch(max_n=8, nrows=2) # check that image and data correspond or not

dls.vocab # check all classes

learner = cnn_learner(dls, resnet34, metrics=[error_rate, accuracy]) # setup a learner

learner.lr_find() # find the learning rate

learner.fine_tune(epochs=6, freeze_epochs=1, base_lr=0.0012) # fine tune the model for 6 epochs by freezing the first epoch

interp = ClassificationInterpretation.from_learner(learner)
interp.plot_confusion_matrix(normalize=True, norm_dec=2, figsize=(16,16), dpi=60) # plot a confusion matrix to look at the accuracy of each classes

learner.show_results(shuffle=True) # see the result of the model

learner.export("MODEL NAME") # save your model